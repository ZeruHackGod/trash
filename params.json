{"name":"Trash","tagline":"Errors dump for Go","body":"# trash [![GoDoc](https://godoc.org/github.com/go-zoo/trash?status.svg)](https://godoc.org/github.com/go-zoo/trash) [![Build Status](https://travis-ci.org/go-zoo/trash.svg?branch=master)](https://travis-ci.org/go-zoo/trash)\r\n\r\n### What is trash ?\r\ntrash deal with logging, sending and stacking errors.\r\nCurrently supporting json and xml format.\r\nAnd also implementing the standard `error` interface.\r\n\r\n![alt tag](http://lifescapesdesignblog.weebly.com/uploads/1/2/8/0/12806369/__6190365.jpg)\r\n\r\n### Example\r\nCreating a new err.\r\n\r\n``` go\r\n  import \"log\"\r\n  import \"errors\"\r\n\r\n  func main() {\r\n    // Takes a logger and data format (json, xml)\r\n    t := trash.New(logger, \"json\")\r\n\r\n    if 1 != 2 {\r\n      // Default Err\r\n      // Arguments (Error Type, Error Message) -> (string, string or error)\r\n      t.NewErr(trash.GenericErr, errors.New(\"example err\")).Send(rw).Log()\r\n\r\n      // HTTP Err\r\n      t.NewErr(trash.GenericErr, \"useless error\").SendHTTP(rw, 404).LogHTTP(req)\r\n\r\n      // Standalone inline HTTP error declaring\r\n      trash.NewJSONErr(trash.InvalidDataErr, \"1 not equal 2 ...\").LogHTTP(req).SendHTTP(rw, 406)\r\n    }\r\n  }\r\n```\r\nYou can also create a dump. Which is an error stack you want to backup.\r\nA dump need a `io.Writer` to save the errors stack.\r\n\r\n``` go\r\n  func main() {\r\n    t := trash.New(logger, \"json\")\r\n    t2 := trash.New(logger, \"xml\")\r\n    // The dump will write all errors from the provided trash in a log file or any io.Writer.\r\n    trash.NewDump(file, t, t2)\r\n\r\n    if 1 != 2 {\r\n      t.NewErr(trash.InvalidDataErr, \"1 not equal 2\")\r\n    }\r\n}\r\n\r\n```\r\n\r\n### TODO\r\n\r\n- DOC\r\n- More Testing\r\n- Debugging\r\n- Optimisation\r\n\r\n### Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (git checkout -b my-new-feature)\r\n3. Write Tests!\r\n4. Commit your changes (git commit -am 'Add some feature')\r\n5. Push to the branch (git push origin my-new-feature)\r\n6. Create new Pull Request\r\n\r\n### License\r\nMIT\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}